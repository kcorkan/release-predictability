<!DOCTYPE html>
<html>
<head>
    <title>Release Predictability</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Mon May 22 2017 10:01:55 GMT-0600 (MDT) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Mon May 22 2017 10:01:55 GMT-0600 (MDT)";
        var STORY    = "F259";
        var BUILDER  = "corkr03";
        var CHECKSUM = 6341062155;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("RallyTechServices.releasePredictability.utils.ReleasePredictabilityCalculator",{}),Ext.define("RallyTechServices.utils.Toolbox",{singleton:!0,fetchPortfolioItemTypes:function(){var a=Ext.create("Deft.Deferred"),b=Ext.create("Rally.data.wsapi.Store",{model:"TypeDefinition",fetch:["TypePath","Ordinal","Name"],filters:[{property:"TypePath",operator:"contains",value:"PortfolioItem/"}],sorters:[{property:"Ordinal",direction:"ASC"}]});return b.load({callback:function(b,c,d){if(d){var e=new Array(b.length);_.each(b,function(a){var b=Number(a.get("Ordinal"));e[b]={typePath:a.get("TypePath"),name:a.get("Name")}}),a.resolve(e)}else{var f="";c&&c.error&&c.error.errors&&(f=c.error.errors.join(",")),a.reject("Error loading Portfolio Item Types:  "+f)}}}),a.promise},fetchWsapiRecords:function(a){var b=Ext.create("Deft.Deferred");a.limit||(a.limit="Infinity");var c=Ext.create("Rally.data.wsapi.Store",a);return c.load({callback:function(a,c,d){if(d)b.resolve(a);else{var e="";c&&c.error&&c.error.errors&&(e=c.error.errors.join(",")),b.reject("Error loading records:  "+e)}}}),b.promise},fetchSnapshots:function(a){var b=Ext.create("Deft.Deferred");a.limit||(a.limit="Infinity");var c=Ext.create("Rally.data.lookback.SnapshotStore",a);return c.load({callback:function(a,c,d){if(d)b.resolve(a);else{var e="";c&&c.error&&c.error.errors&&(e=c.error.errors.join(",")),b.reject("Error loading snapshots:  "+e)}}}),b.promise}}),Ext.define("release-predictability",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"message_box",tpl:"Hello, <tpl>{_refObjectName}</tpl>"},{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"release-predictability"},config:{defaultSettings:{objectiveField:"LeafStoryCount",numberOfReleases:4,doneState:"GA",thresholdIdealLow:80,thresholdIdealHigh:100,thresholdOutlier:120,outlierColor:"#B81B10",idealColor:"#b2e3b6",portfolioItemTypePath:"PortfolioItem/Feature"}},launch:function(){RallyTechServices.utils.Toolbox.fetchPortfolioItemTypes().then({success:this.initializeApp,failure:this.showErrorNotification,scope:this})},initializeApp:function(a){this.logger.log("initializeApp",a),this.portfolioItemTypes=a,this.updateSettingsValues({portfolioItemTypePath:a[0]}),this.fetchReleaseInfo().then({success:this.fetchReleases,failure:this.showErrorNotification,scope:this}).then({success:this.fetchSnapshots,failure:this.showErrorNotification,scope:this}).then({success:this.buildChart,failure:this.showErrorNotification,scope:this})},getNumberOfReleases:function(){return this.getSetting("numberOfReleases")},getHighThresholdIdeal:function(){return this.getSetting("thresholdIdealHigh")},getLowThresholdIdeal:function(){return this.getSetting("thresholdIdealLow")},getOutlierThreshold:function(){return this.getSetting("thresholdOutlier")},getOutlierColor:function(){return this.getSetting("outlierColor")},getIdealColor:function(){return this.getSetting("idealColor")},getLowestLevelPortfolioItemType:function(){return this.getSetting("portfolioItemTypePath")},fetchReleaseInfo:function(){return this.logger.log("fetchReleaseInfo"),RallyTechServices.utils.Toolbox.fetchWsapiRecords({model:"Release",fetch:["Name","ReleaseStartDate","ReleaseDate"],filters:[{property:"ReleaseDate",operator:"<",value:Rally.util.DateTime.toIsoString(new Date)}],context:{projectScopeDown:!1,projectScopeUp:!1,project:this.getContext().getProject()._ref},sorters:[{property:"ReleaseDate",direction:"Desc"}],limit:this.getNumberOfReleases(),pageSize:this.getNumberOfReleases()})},fetchReleases:function(a){this.logger.log("fetchReleases",a);var b=Ext.Array.map(a,function(a){return{property:"Name",value:a.get("Name")}});return b=Rally.data.wsapi.Filter.or(b),RallyTechServices.utils.Toolbox.fetchWsapiRecords({model:"Release",fetch:["Name","ReleaseStartDate","ReleaseDate","ObjectID"],filters:b,sorters:[{property:"ReleaseDate",direction:"ASC"}]})},fetchSnapshots:function(a){this.logger.log("fetchSnapshots",a);var b={};Ext.Array.each(a,function(a){var c=a.get("Name");b[c]||(b[c]={releaseStartDate:Rally.util.DateTime.toIsoString(a.get("ReleaseStartDate")),releaseDate:Rally.util.DateTime.toIsoString(a.get("ReleaseDate")),name:a.get("Name"),oids:[]}),b[c].oids.push(a.get("ObjectID"))}),this.releaseHash=b;var c=[],d=this.getFeatureTypePath(),e=this.getContext().getProject().ObjectID,f={find:{_TypeHierarchy:d,_ProjectHierarchy:e},fetch:["ObjectID","Name","FormattedID","Project",this.getObjectiveField(),"Release","LeafStoryCount","AcceptedLeafStoryCount","State"],removeUnauthorizedSnapshots:!0,hydrate:["Project","Release","State"],limit:"Infinity"};return Ext.Object.each(b,function(a,b){var d=Ext.clone(f);d.find.Release={$in:b.oids},d.find.__At=b.releaseStartDate,c.push(RallyTechServices.utils.Toolbox.fetchSnapshots(d));var d=Ext.clone(f);d.find.Release={$in:b.oids},d.find.__At=b.releaseDate,c.push(RallyTechServices.utils.Toolbox.fetchSnapshots(d))}),Deft.Promise.all(c)},getFeatureTypePath:function(){return this.portfolioItemTypes[0].typePath},getObjectiveField:function(){return this.getSetting("objectiveField")},buildChart:function(a){this.logger.log("buildChart",a);var b=this.getProjectHash(a),c=[],d=[],e=[];Ext.Object.each(b,function(a,b){for(var f=this.getDataPoint(b,this.releaseHash),g=[],h=0;h<f.start.length;h++){var i=f.start[h]?f.end[h]/f.start[h]*100:0;d[h]=(d[h]||0)+f.start[h],e[h]=(e[h]||0)+f.end[h],g.push(Math.round(i))}c.push({name:b.Name,data:g})},this);for(var f=[],g=0;g<d.length;g++){var h=d[g]?e[g]/d[g]*100:0;f.push(Math.round(h))}c.push({name:"Total",data:f});var i=Ext.Object.getKeys(this.releaseHash);this.logger.log("chartData",i,c),this.add({xtype:"rallychart",chartConfig:this.getChartConfig(),chartData:{series:c,categories:i}})},getChartConfig:function(){return{chart:{type:"line"},title:{text:"Release Predictability"},yAxis:{title:{text:"Percent of Objectives"},plotBands:[{color:this.getIdealColor(),from:this.getLowThresholdIdeal(),to:this.getHighThresholdIdeal()},{color:this.getOutlierColor(),from:this.getOutlierThreshold(),to:this.getOutlierThreshold()+1}]}}},getDataPoint:function(a,b){var c=this.getObjectiveField(),d=0,e=0,f=[],g=[];return Ext.Object.each(b,function(b,h){var i=a.snaps[d++];f[e]=0;for(var j=0;j<i.length;j++){var k=i[j].get(c)||0;f[e]+=k}var l=a.snaps[d++];g[e]=0;for(var j=0;j<l.length;j++){var m=l[j],k=m.get(c)||0;this.isSnapDone(m)&&(g[e]+=k)}e++},this),{start:f,end:g}},getDoneState:function(){return this.getSetting("doneState")},isSnapDone:function(a){return this.logger.log("isSnapDone",a.get("State"),this.getDoneState()),a.get("State")&&a.get("State")===this.getDoneState()},getProjectHash:function(a){for(var b={},c=0;c<a.length;c++)for(var d=a[c],e=0;e<d.length;e++){var f=d[e].get("Project");d[e].get("Release");if(!b[f.ObjectID]){var g=Ext.Array.map(a,function(a){return[]});b[f.ObjectID]={Name:f.Name,snaps:g}}b[f.ObjectID].snaps[c].push(d[e])}return b},showErrorNotification:function(a){Rally.ui.notify.Notifier.showError(a)},getSettingsFields:function(){return[{name:"objectiveField",xtype:"rallyfieldcombobox",model:this.getLowestLevelPortfolioItemType(),fieldLabel:"Objective Field",labelAlign:"right"},{name:"doneState",xtype:"rallyfieldvaluecombobox",fieldLabel:"Done State",labelAlign:"right",valueField:"name",field:"State",model:this.getLowestLevelPortfolioItemType()},{name:"numberOfReleases",xtype:"rallynumberfield",minValue:1,maxValue:8,fieldLabel:"Number of Releases",labelAlign:"right"},{name:"thresholdIdealLow",xtype:"rallynumberfield",minValue:0,maxValue:120,fieldLabel:"Ideal Threshold (Low)",labelAlign:"right"},{name:"thresholdIdealHigh",xtype:"rallynumberfield",minValue:0,maxValue:120,fieldLabel:"Ideal Threshold (High)",labelAlign:"right"},{name:"thresholdOutlier",xtype:"rallynumberfield",minValue:80,maxValue:200,fieldLabel:"Outlier Threshold",labelAlign:"right"}]},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()}});
            
               Rally.launchApp('release-predictability', {
                   name: 'Release Predictability'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>